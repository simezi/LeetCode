/**
 * @param {number[]} nums
 * @return {number[][]}
 */
var threeSum = function(nums) {
  if (nums.length < 3) {
    return [];
  }
  
  nums.sort((a, b) => a - b);
  let ret = [];
  for (let i = 0; i < nums.length - 2; i++) {
    let min = nums[i];
    if (min > 0) {
      break;
    }
    if (nums[i - 1] === nums[i]) {
      continue;
    }

    let map = {};
    let duplicateSet = new Set();
    for (let j = i + 1; j < nums.length; j++) {
      const target = 0 - min;
      const max = nums[j];
      const mid = map[target - max];
      if (mid != null) {
        if (mid > max) {
          break;
        }
        if (duplicateSet.has(mid)) {
          continue;
        }
        duplicateSet.add(mid);
        ret.push([min, mid, max]);
      } else {
        map[max] = max;
      }
    }
  }
  return ret;
};
